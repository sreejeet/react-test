{"version":3,"sources":["components/Form.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","state","name","email","dob","phone","err_name","err_email","err_dob","err_phone","submit_success","fireRedirect","this","Container","maxWidth","style","padding","textAlign","Typography","variant","noWrap","id","onSubmit","handleSubmit","bind","method","Grid","container","spacing","item","xs","TextField","fullWidth","error","undefined","helperText","type","label","size","value","onChange","onNameChange","onEmailChange","InputLabelProps","shrink","onDobChange","onPhoneChange","Button","to","event","setState","target","trimLeft","console","log","preventDefault","Date","now","parse","axios","post","headers","then","response","resetErrors","window","location","pathname","catch","err","data","React","Component","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","List","makeStyles","table","minWidth","get","rsp","Divider","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","map","row","key","scope","useStyles","flexGrow","menuButton","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","fade","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","App","classes","className","AppBar","Toolbar","exact","path","UserList","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4e173610.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      dob: '',\n      phone: '',\n      err_name: '',\n      err_email: '',\n      err_dob: '',\n      err_phone: '',\n      submit_success: false,\n    }\n  }\n\n\n  render() {\n\n    const fireRedirect = this.state.submit_success\n\n    return (\n      <Container maxWidth=\"xs\" style={{ padding: '20px' }}>\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"h3\" noWrap>\n            User form\n          </Typography>\n        </div>\n        <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField fullWidth\n                    error={this.state.err_name !== undefined && this.state.err_name !== ''}\n                    helperText={this.state.err_name} type=\"text\" label=\"Name\" name=\"name\" size=\"small\" variant=\"outlined\"\n                    value={this.state.name} onChange={this.onNameChange.bind(this)} />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField fullWidth\n                    error={this.state.err_email !== undefined && this.state.err_email !== ''}\n                    helperText={this.state.err_email} type=\"email\" label=\"E-Mail\" name=\"email\" size=\"small\" variant=\"outlined\"\n                    value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField InputLabelProps={{ shrink: true }} fullWidth\n                    error={this.state.err_dob !== undefined && this.state.err_dob !== ''}\n                    helperText={this.state.err_dob} type=\"date\" label=\"Date of Birth\" name=\"dob\" size=\"small\" variant=\"outlined\"\n                    value={this.state.dob} onChange={this.onDobChange.bind(this)} />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField fullWidth\n                    error={this.state.err_phone !== undefined && this.state.err_phone !== ''}\n                    helperText={this.state.err_phone} type=\"number\" label=\"Phone\" name=\"phone\" size=\"small\" variant=\"outlined\"\n                    value={this.state.phone} onChange={this.onPhoneChange.bind(this)} />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Button fullWidth type=\"submit\" variant=\"contained\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n        {fireRedirect && (<Redirect to='/' />)}\n      </Container>\n    );\n  }\n\n  onNameChange(event) {\n    this.setState({ name: event.target.value.trimLeft() })\n  }\n\n  onEmailChange(event) {\n    this.setState({ email: event.target.value })\n  }\n\n  onDobChange(event) {\n    console.log(event.target.value)\n    this.setState({ dob: event.target.value })\n  }\n\n  onPhoneChange(event) {\n    this.setState({ phone: event.target.value })\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n\n    // Check user over 18\n    // 18 years in milliseconds is 568036800000\n    if (Date.now() - Date.parse(this.state.dob) < 568036800000) {\n      this.setState({ err_dob: 'You must be over 18 years old.' })\n      return\n    }\n\n    this.setState({\n      err_name: '',\n      err_email: '',\n      err_dob: '',\n      err_phone: '',\n    })\n\n    axios.post(\n      'http://localhost:8000/userdata/',\n      this.state,\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n      }\n    ).then(response => {\n      this.resetErrors()\n      this.setState({ submit_success: true })\n      window.location.pathname = '/'\n    }).catch((err) => {\n      this.setState({\n        err_name: err.response.data.name,\n        err_email: err.response.data.email,\n        err_dob: err.response.data.dob,\n        err_phone: err.response.data.phone,\n      })\n    })\n  }\n\n  resetErrors() {\n    this.setState({\n      err_name: '',\n      err_email: '',\n      err_dob: '',\n      err_phone: '',\n    })\n  }\n\n}","import { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport axios from 'axios';\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Divider } from '@material-ui/core';\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default class List extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        id: '',\n        name: '',\n        email: '',\n        dob: '',\n        phone: '',\n      }]\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\n      'http://ec2-13-232-194-142.ap-south-1.compute.amazonaws.com/api/userdata/',\n    ).then(rsp => {\n      console.log(rsp.data)\n      this.setState({ data: rsp.data })\n    }).catch((err) => {\n      this.setState({\n        data: [{\n          id: '',\n          name: '',\n          email: '',\n          dob: '',\n          phone: '',\n        }]\n      })\n      console.log(err)\n    })\n  }\n\n  render() {\n\n    return (\n      <Container>\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"h3\" noWrap>\n            User data list\n          </Typography>\n          <Divider />\n        </div>\n\n        <TableContainer component={Paper} >\n          <Table aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Name</StyledTableCell>\n                <StyledTableCell align=\"right\">E-Mail</StyledTableCell>\n                <StyledTableCell align=\"right\">Date of Birth</StyledTableCell>\n                <StyledTableCell align=\"right\">Phone</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.data.map((row) => (\n                <StyledTableRow key={row.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.dob}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.phone}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container >\n\n    );\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nimport Form from './components/Form'\nimport UserList from './components/List'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            User info dashboard\n            </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Router>\n        <div>\n\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/user-list\">List data</Link>\n              </li>\n              <li>\n                <Link to=\"/user-form\">User form</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <Container>\n            <Switch>\n              <Route component={Form} exact path='/user-form' />\n              <Route component={UserList} exact path='/user-list' />\n            </Switch>\n          </Container>\n\n        </div>\n      </Router>\n\n    </div >\n  );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}